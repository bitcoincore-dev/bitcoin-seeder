## bitcoin-seeder [![Build Status](https://travis-ci.com/bitcoincore-dev/bitcoin-seeder.svg?branch=master)](https://travis-ci.com/bitcoincore-dev/bitcoin-seeder)

#### bitcoin-seeder is a crawler for the Bitcoin network, which exposes a list of reliable nodes via a built-in DNS server.

### Features:

* regularly revisits known nodes to check their availability
* bans nodes after enough failures, or bad behaviour
* accepts nodes down to v0.3.19 to request new IP addresses from,
  but only reports good post-v0.3.24 nodes.
* keeps statistics over (exponential) windows of 2 hours, 8 hours,
  1 day and 1 week, to base decisions on.
* very low memory (a few tens of megabytes) and cpu requirements.
* crawlers run in parallel (by default 24 threads simultaneously).

## REQUIREMENTS

### linux-gnu & darwin (macos)  

```./scripts/before_install.sh```  

OR  

```./bootstrap.sh```  


## COMPILING

Compiling will require boost and ssl.  On debian systems, these are provided
by ```libboost-dev``` and ```libssl-dev``` respectively.

```make```

This will produce the `dnsseed` binary.


## USAGE

Assuming you want to run a dns seed on seeder.bitcoincore.dev, you will
need an authorative NS record in bitcoincore.dev's domain record, pointing
to for example vps.example.com:

```dig -t NS bitcoincore.dev```  

```
;; ANSWER SECTION:
bitcoincore.dev.	1800	IN	NS	ns2.digitalocean.com.
bitcoincore.dev.	1800	IN	NS	ns3.digitalocean.com.
bitcoincore.dev.	1800	IN	NS	ns1.digitalocean.com.
```
On the system seeder.bitcoincore.dev, you can now run dnsseed:

```
./dnsseed -h seeder.bitcoincore.dev -n ns1.digitalocean.com.
```

If you want the DNS server to report SOA records, please provide an
e-mail address (with the @ part replaced by .) using -m.

```
./dnsseed -h seeder.bitcoincore.dev -n ns1.digitalocean.com. -m admin.bitcoincore.dev  
```

## RUN

### Edit ```run``` and  configure accordingly then
```
./run
```

## RUNNING AS NON-ROOT

Typically, you'll need root privileges to listen to port 53 (name service).

One solution is using an iptables rule (Linux only) to redirect it to
a non-privileged port:

```iptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-port 5353```  

If properly configured, this will allow you to run dnsseed in userspace, using
the -p 5353 option.
